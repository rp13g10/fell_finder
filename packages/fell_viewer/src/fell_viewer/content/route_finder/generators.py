"""Functions which generate components for the route finder page based on
configurable inputs"""

from plotly import graph_objects as go

from fell_viewer.common.containers import Route


def generate_elevation_plot(route: Route) -> go.Figure:
    """For a generated route, generate a plotly graph which displays the
    elevation profile.

    Args:
        graph: The graph which was used to generate the provided route
        route: A route generated by a RouteMaker

    Returns:
        A scatter plot with distance travelled on the X axis and elevation on
        the Y axis

    """

    cml_distances = []
    cml_distance = 0.0
    for dist in route.geometry.dists:
        cml_distance += dist
        cml_distances.append(cml_distance)
    route_trace = go.Scatter(
        mode="lines+markers",
        x=cml_distances,
        y=route.geometry.eles,
        line=dict(shape="spline"),
        customdata=route.geometry.coords,
        fill="tozeroy",
        hovertemplate="%{y:,.2f} m",
        name="Elevation",
    )

    layout = go.Layout(
        margin=dict(l=20, r=0, t=20, b=20),
        xaxis={"showgrid": False, "range": [0, route.metrics.dist]},
        yaxis={
            "showgrid": False,
            "range": [
                0.9 * min(route.geometry.eles),
                1.1 * max(route.geometry.eles),
            ],
        },
    )

    figure = go.Figure(data=[route_trace], layout=layout)

    return figure
